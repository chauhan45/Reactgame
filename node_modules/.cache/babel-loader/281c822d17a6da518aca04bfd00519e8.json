{"ast":null,"code":"import _toConsumableArray from \"/home/amit/Documents/amit projects/main amitgame/amitgame/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js\";\nimport _slicedToArray from \"/home/amit/Documents/amit projects/main amitgame/amitgame/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";\n\nvar _jsxFileName = \"/home/amit/Documents/amit projects/main amitgame/amitgame/src/tiktak/tictactoe-v2.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useRef } from \"react\";\nimport cloneDeep from \"lodash/cloneDeep\";\nimport \"./tictactoe.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Block(_ref) {\n  var pos = _ref.pos,\n      grid = _ref.grid,\n      _onClick = _ref.onClick;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"block\",\n    onClick: function onClick() {\n      return _onClick(pos);\n    },\n    children: grid[pos]\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 7,\n    columnNumber: 5\n  }, this);\n}\n\n_c = Block;\nvar GameStatus = {\n  Init: \"Init\",\n  Playing: \"Playing\",\n  End: \"End\"\n};\nvar initCheck = {\n  rows: Array(3).fill(0),\n  cols: Array(3).fill(0),\n  diagonal: 0,\n  antiDiagonal: 0,\n  total: 0\n};\n\nfunction TicTacToe() {\n  _s();\n\n  var _useState = useState(Array(9).fill(null)),\n      _useState2 = _slicedToArray(_useState, 2),\n      grid = _useState2[0],\n      setGrid = _useState2[1];\n\n  var _useState3 = useState(\"O\"),\n      _useState4 = _slicedToArray(_useState3, 2),\n      turn = _useState4[0],\n      setTurn = _useState4[1];\n\n  var _useState5 = useState(GameStatus.Init),\n      _useState6 = _slicedToArray(_useState5, 2),\n      gameStatus = _useState6[0],\n      setGameStatus = _useState6[1];\n\n  var _useState7 = useState(null),\n      _useState8 = _slicedToArray(_useState7, 2),\n      winner = _useState8[0],\n      setWinner = _useState8[1];\n\n  var check = useRef(null);\n\n  var start = function start() {\n    check.current = cloneDeep(initCheck);\n    setGrid(Array(9).fill(null));\n    setTurn(\"O\");\n    setGameStatus(GameStatus.Playing);\n    setWinner(null);\n  };\n\n  var move = function move(pos) {\n    if (grid[pos] === null) {\n      var newGrid = _toConsumableArray(grid);\n\n      var _gameCheck = gameCheck(pos),\n          _gameCheck2 = _slicedToArray(_gameCheck, 2),\n          _gameStatus = _gameCheck2[0],\n          _winner = _gameCheck2[1];\n\n      newGrid[pos] = turn;\n      setGrid(newGrid);\n      setTurn(turn === \"O\" ? \"X\" : \"O\");\n      setGameStatus(_gameStatus);\n      setWinner(_winner);\n    }\n  };\n\n  var gameCheck = function gameCheck(pos) {\n    var add = turn === \"O\" ? 1 : -1;\n    var row = Math.floor(pos / 3);\n    var col = pos % 3;\n    check.current.rows[row] += add;\n    check.current.cols[col] += add;\n    if ([0, 4, 8].includes(pos)) check.current.diagonal += add;\n    if ([2, 4, 6].includes(pos)) check.current.antiDiagonal += add;\n    check.current.total++;\n\n    if (Math.abs(check.current.rows[row]) === 3 || Math.abs(check.current.cols[col]) === 3 || Math.abs(check.current.diagonal) === 3 || Math.abs(check.current.antiDiagonal) === 3) {\n      return [GameStatus.End, turn];\n    }\n\n    if (check.current.total === 9) {\n      return [GameStatus.End, null];\n    }\n\n    return [GameStatus.Playing, null];\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"game\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"box\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"row\",\n        children: [/*#__PURE__*/_jsxDEV(Block, {\n          pos: 0,\n          grid: grid,\n          onClick: move\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Block, {\n          pos: 1,\n          grid: grid,\n          onClick: move\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Block, {\n          pos: 2,\n          grid: grid,\n          onClick: move\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"row\",\n        children: [/*#__PURE__*/_jsxDEV(Block, {\n          pos: 3,\n          grid: grid,\n          onClick: move\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Block, {\n          pos: 4,\n          grid: grid,\n          onClick: move\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Block, {\n          pos: 5,\n          grid: grid,\n          onClick: move\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"row\",\n        children: [/*#__PURE__*/_jsxDEV(Block, {\n          pos: 6,\n          grid: grid,\n          onClick: move\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Block, {\n          pos: 7,\n          grid: grid,\n          onClick: move\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Block, {\n          pos: 8,\n          grid: grid,\n          onClick: move\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 7\n    }, this), gameStatus !== GameStatus.Playing && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"overlay\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 45\n    }, this), gameStatus === GameStatus.Init && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"panel\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: \"Tic Tac Toe\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"start-btn\",\n        onClick: start,\n        children: \"Start\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 9\n    }, this), gameStatus === GameStatus.End && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"panel\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: winner ? \"Winner: \".concat(winner) : \"Draw\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"start-btn\",\n        onClick: start,\n        children: \"Start Over\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 83,\n    columnNumber: 5\n  }, this);\n}\n\n_s(TicTacToe, \"BKtzBsWQnLqD1vxYIqSQ0Zxc34U=\");\n\n_c2 = TicTacToe;\nexport default TicTacToe;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Block\");\n$RefreshReg$(_c2, \"TicTacToe\");","map":{"version":3,"sources":["/home/amit/Documents/amit projects/main amitgame/amitgame/src/tiktak/tictactoe-v2.js"],"names":["React","useState","useRef","cloneDeep","Block","pos","grid","onClick","GameStatus","Init","Playing","End","initCheck","rows","Array","fill","cols","diagonal","antiDiagonal","total","TicTacToe","setGrid","turn","setTurn","gameStatus","setGameStatus","winner","setWinner","check","start","current","move","newGrid","gameCheck","add","row","Math","floor","col","includes","abs"],"mappings":"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","sourcesContent":["import React, { useState, useRef } from \"react\";\nimport cloneDeep from \"lodash/cloneDeep\";\nimport \"./tictactoe.css\";\n\nfunction Block({ pos, grid, onClick }) {\n  return (\n    <div className=\"block\" onClick={() => onClick(pos)}>\n      {grid[pos]}\n    </div>\n  );\n}\n\nconst GameStatus = {\n  Init: \"Init\",\n  Playing: \"Playing\",\n  End: \"End\"\n};\n\nconst initCheck = {\n  rows: Array(3).fill(0),\n  cols: Array(3).fill(0),\n  diagonal: 0,\n  antiDiagonal: 0,\n  total: 0\n};\n\nfunction TicTacToe() {\n  const [grid, setGrid] = useState(Array(9).fill(null));\n  const [turn, setTurn] = useState(\"O\");\n  const [gameStatus, setGameStatus] = useState(GameStatus.Init);\n  const [winner, setWinner] = useState(null);\n  const check = useRef(null);\n\n  const start = () => {\n    check.current = cloneDeep(initCheck);\n    setGrid(Array(9).fill(null));\n    setTurn(\"O\");\n    setGameStatus(GameStatus.Playing);\n    setWinner(null);\n  };\n\n  const move = pos => {\n    if (grid[pos] === null) {\n      const newGrid = [...grid];\n      const [gameStatus, winner] = gameCheck(pos);\n\n      newGrid[pos] = turn;\n      setGrid(newGrid);\n      setTurn(turn === \"O\" ? \"X\" : \"O\");\n      setGameStatus(gameStatus);\n      setWinner(winner);\n    }\n  };\n\n  const gameCheck = pos => {\n    const add = turn === \"O\" ? 1 : -1;\n    const row = Math.floor(pos / 3);\n    const col = pos % 3;\n\n    check.current.rows[row] += add;\n    check.current.cols[col] += add;\n    if ([0, 4, 8].includes(pos)) check.current.diagonal += add;\n    if ([2, 4, 6].includes(pos)) check.current.antiDiagonal += add;\n    check.current.total++;\n\n    if (\n      Math.abs(check.current.rows[row]) === 3 ||\n      Math.abs(check.current.cols[col]) === 3 ||\n      Math.abs(check.current.diagonal) === 3 ||\n      Math.abs(check.current.antiDiagonal) === 3\n    ) {\n      return [GameStatus.End, turn];\n    }\n\n    if (check.current.total === 9) {\n      return [GameStatus.End, null];\n    }\n\n    return [GameStatus.Playing, null];\n  };\n\n  return (\n    <div className=\"game\">\n      <div className=\"box\">\n        <div className=\"row\">\n          <Block pos={0} grid={grid} onClick={move} />\n          <Block pos={1} grid={grid} onClick={move} />\n          <Block pos={2} grid={grid} onClick={move} />\n        </div>\n        <div className=\"row\">\n          <Block pos={3} grid={grid} onClick={move} />\n          <Block pos={4} grid={grid} onClick={move} />\n          <Block pos={5} grid={grid} onClick={move} />\n        </div>\n        <div className=\"row\">\n          <Block pos={6} grid={grid} onClick={move} />\n          <Block pos={7} grid={grid} onClick={move} />\n          <Block pos={8} grid={grid} onClick={move} />\n        </div>\n      </div>\n      {gameStatus !== GameStatus.Playing && <div className=\"overlay\" />}\n      {gameStatus === GameStatus.Init && (\n        <div className=\"panel\">\n          <div>Tic Tac Toe</div>\n          <div className=\"start-btn\" onClick={start}>\n            Start\n          </div>\n        </div>\n      )}\n      {gameStatus === GameStatus.End && (\n        <div className=\"panel\">\n          <div>{winner ? `Winner: ${winner}` : \"Draw\"}</div>\n          <div className=\"start-btn\" onClick={start}>\n            Start Over\n          </div>\n        </div>\n      )}\n    </div>\n  );\n}\n\nexport default TicTacToe;\n"]},"metadata":{},"sourceType":"module"}