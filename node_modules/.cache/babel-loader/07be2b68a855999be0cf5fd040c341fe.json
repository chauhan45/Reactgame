{"ast":null,"code":"import _toConsumableArray from\"/home/amit/Documents/amit per/amitgame/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js\";import _classCallCheck from\"/home/amit/Documents/amit per/amitgame/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";import _createClass from\"/home/amit/Documents/amit per/amitgame/node_modules/@babel/runtime/helpers/esm/createClass.js\";import _inherits from\"/home/amit/Documents/amit per/amitgame/node_modules/@babel/runtime/helpers/esm/inherits.js\";import _createSuper from\"/home/amit/Documents/amit per/amitgame/node_modules/@babel/runtime/helpers/esm/createSuper.js\";import React,{Component}from'react';import Snake from'./Snake';import Food from'./Food';import'../main.css';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var getRandomCoordinates=function getRandomCoordinates(){var min=1;var max=98;var x=Math.floor((Math.random()*(max-min+1)+min)/2)*2;var y=Math.floor((Math.random()*(max-min+1)+min)/2)*2;return[x,y];};var initialState={food:getRandomCoordinates(),speed:200,direction:'RIGHT',snakeDots:[[0,0],[2,0]]};var App=/*#__PURE__*/function(_Component){_inherits(App,_Component);var _super=_createSuper(App);function App(){var _this;_classCallCheck(this,App);for(var _len=arguments.length,args=new Array(_len),_key=0;_key<_len;_key++){args[_key]=arguments[_key];}_this=_super.call.apply(_super,[this].concat(args));_this.state=initialState;_this.onKeyDown=function(e){e=e||window.event;switch(e.keyCode){case 38:_this.setState({direction:'UP'});break;case 40:_this.setState({direction:'DOWN'});break;case 37:_this.setState({direction:'LEFT'});break;case 39:_this.setState({direction:'RIGHT'});break;}};_this.moveSnake=function(){var dots=_toConsumableArray(_this.state.snakeDots);var head=dots[dots.length-1];switch(_this.state.direction){case'RIGHT':head=[head[0]+2,head[1]];break;case'LEFT':head=[head[0]-2,head[1]];break;case'DOWN':head=[head[0],head[1]+2];break;case'UP':head=[head[0],head[1]-2];break;}dots.push(head);dots.shift();_this.setState({snakeDots:dots});};return _this;}_createClass(App,[{key:\"componentDidMount\",value:function componentDidMount(){setInterval(this.moveSnake,this.state.speed);document.onkeydown=this.onKeyDown;}},{key:\"componentDidUpdate\",value:function componentDidUpdate(){this.checkIfOutOfBorders();this.checkIfCollapsed();this.checkIfEat();}},{key:\"checkIfOutOfBorders\",value:function checkIfOutOfBorders(){var head=this.state.snakeDots[this.state.snakeDots.length-1];if(head[0]>=100||head[1]>=100||head[0]<0||head[1]<0){this.onGameOver();}}},{key:\"checkIfCollapsed\",value:function checkIfCollapsed(){var _this2=this;var snake=_toConsumableArray(this.state.snakeDots);var head=snake[snake.length-1];snake.pop();snake.forEach(function(dot){if(head[0]==dot[0]&&head[1]==dot[1]){_this2.onGameOver();}});}},{key:\"checkIfEat\",value:function checkIfEat(){var head=this.state.snakeDots[this.state.snakeDots.length-1];var food=this.state.food;if(head[0]==food[0]&&head[1]==food[1]){this.setState({food:getRandomCoordinates()});this.enlargeSnake();this.increaseSpeed();}}},{key:\"enlargeSnake\",value:function enlargeSnake(){var newSnake=_toConsumableArray(this.state.snakeDots);newSnake.unshift([]);this.setState({snakeDots:newSnake});}},{key:\"increaseSpeed\",value:function increaseSpeed(){if(this.state.speed>10){this.setState({speed:this.state.speed-10});}}},{key:\"onGameOver\",value:function onGameOver(){alert(\"Game Over. Snake length is \".concat(this.state.snakeDots.length));this.setState(initialState);}},{key:\"render\",value:function render(){return/*#__PURE__*/_jsxs(\"div\",{className:\"game-area\",children:[/*#__PURE__*/_jsx(Snake,{snakeDots:this.state.snakeDots}),/*#__PURE__*/_jsx(Food,{dot:this.state.food})]});}}]);return App;}(Component);export default App;","map":{"version":3,"sources":["/home/amit/Documents/amit per/amitgame/src/Screen/snake-game/App.js"],"names":["React","Component","Snake","Food","getRandomCoordinates","min","max","x","Math","floor","random","y","initialState","food","speed","direction","snakeDots","App","state","onKeyDown","e","window","event","keyCode","setState","moveSnake","dots","head","length","push","shift","setInterval","document","onkeydown","checkIfOutOfBorders","checkIfCollapsed","checkIfEat","onGameOver","snake","pop","forEach","dot","enlargeSnake","increaseSpeed","newSnake","unshift","alert"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport Snake from './Snake';\nimport Food from './Food';\nimport '../main.css'\n\n\nconst getRandomCoordinates = () => {\n  let min = 1;\n  let max = 98;\n  let x = Math.floor((Math.random()*(max-min+1)+min)/2)*2;\n  let y =  Math.floor((Math.random()*(max-min+1)+min)/2)*2;\n  return [x,y]\n}\n\nconst initialState = {\n  food: getRandomCoordinates(),\n  speed: 200,\n  direction: 'RIGHT',\n  snakeDots: [\n    [0,0],\n    [2,0]\n  ]\n}\n\nclass App extends Component {\n\n  state = initialState;\n\n  componentDidMount() {\n    setInterval(this.moveSnake, this.state.speed);\n    document.onkeydown = this.onKeyDown;\n  }\n\n  componentDidUpdate() {\n    this.checkIfOutOfBorders();\n    this.checkIfCollapsed();\n    this.checkIfEat();\n  }\n\n  onKeyDown = (e) => {\n    e = e || window.event;\n    switch (e.keyCode) {\n      case 38:\n        this.setState({direction: 'UP'});\n        break;\n      case 40:\n        this.setState({direction: 'DOWN'});\n        break;\n      case 37:\n        this.setState({direction: 'LEFT'});\n        break;\n      case 39:\n        this.setState({direction: 'RIGHT'});\n        break;\n    }\n  }\n\n  moveSnake = () => {\n    let dots = [...this.state.snakeDots];\n    let head = dots[dots.length - 1];\n\n    switch (this.state.direction) {\n      case 'RIGHT':\n        head = [head[0] + 2, head[1]];\n        break;\n      case 'LEFT':\n        head = [head[0] - 2, head[1]];\n        break;\n      case 'DOWN':\n        head = [head[0], head[1] + 2];\n        break;\n      case 'UP':\n        head = [head[0], head[1] - 2];\n        break;\n    }\n    dots.push(head);\n    dots.shift();\n    this.setState({\n      snakeDots: dots\n    })\n  }\n\n  checkIfOutOfBorders() {\n    let head = this.state.snakeDots[this.state.snakeDots.length - 1];\n    if (head[0] >= 100 || head[1] >= 100 || head[0] < 0 || head[1] < 0) {\n      this.onGameOver();\n    }\n  }\n\n  checkIfCollapsed() {\n    let snake = [...this.state.snakeDots];\n    let head = snake[snake.length - 1];\n    snake.pop();\n    snake.forEach(dot => {\n      if (head[0] == dot[0] && head[1] == dot[1]) {\n        this.onGameOver();\n      }\n    })\n  }\n\n  checkIfEat() {\n    let head = this.state.snakeDots[this.state.snakeDots.length - 1];\n    let food = this.state.food;\n    if (head[0] == food[0] && head[1] == food[1]) {\n      this.setState({\n        food: getRandomCoordinates()\n      })\n      this.enlargeSnake();\n      this.increaseSpeed();\n    }\n  }\n\n  enlargeSnake() {\n    let newSnake = [...this.state.snakeDots];\n    newSnake.unshift([])\n    this.setState({\n      snakeDots: newSnake\n    })\n  }\n\n  increaseSpeed() {\n    if (this.state.speed > 10) {\n      this.setState({\n        speed: this.state.speed - 10\n      })\n    }\n  }\n\n  onGameOver() {\n    alert(`Game Over. Snake length is ${this.state.snakeDots.length}`);\n    this.setState(initialState)\n  }\n\n  render() {\n    return (\n      <div className=\"game-area\">\n        <Snake snakeDots={this.state.snakeDots}/>\n        <Food dot={this.state.food}/>\n      </div>\n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}