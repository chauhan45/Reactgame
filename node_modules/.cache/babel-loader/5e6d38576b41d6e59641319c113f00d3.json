{"ast":null,"code":"import _toConsumableArray from \"/home/amit/Documents/amit per/amitgame/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js\";\nimport _objectSpread from \"/home/amit/Documents/amit per/amitgame/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nimport _createForOfIteratorHelper from \"/home/amit/Documents/amit per/amitgame/node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper.js\";\nimport _slicedToArray from \"/home/amit/Documents/amit per/amitgame/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";\n\nvar _jsxFileName = \"/home/amit/Documents/amit per/amitgame/src/tiktak/tictactoe-v3.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport shuffle from \"lodash/shuffle\";\nimport range from \"lodash/range\";\nimport \"./tictactoe.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Block(_ref) {\n  var pos = _ref.pos,\n      grid = _ref.grid,\n      _onClick = _ref.onClick;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"block\",\n    onClick: function onClick() {\n      return _onClick(pos);\n    },\n    children: grid[pos]\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 8,\n    columnNumber: 5\n  }, this);\n}\n\n_c = Block;\nvar GameStatus = {\n  Init: \"Init\",\n  Playing: \"Playing\",\n  End: \"End\"\n};\nvar initState = {\n  grid: Array(9).fill(null),\n  turn: null,\n  gameStatus: GameStatus.Init,\n  winner: null,\n  you: null\n};\nvar Strategy = {\n  random: function random(grid) {\n    var avail = [];\n    grid.forEach(function (block, i) {\n      if (block === null) avail.push(i);\n    });\n    if (avail.length === 0) return null;\n    return avail[Math.floor(Math.random() * avail.length)];\n  },\n  minimax: function minimax(grid, turn) {\n    var _gameCheck = gameCheck(grid),\n        _gameCheck2 = _slicedToArray(_gameCheck, 2),\n        gameStatus = _gameCheck2[0],\n        winner = _gameCheck2[1];\n\n    if (gameStatus === GameStatus.End) {\n      if (winner === null) return [null, 0];\n      return [null, -1];\n    }\n\n    var score = Number.MIN_SAFE_INTEGER;\n    var posChoice = null;\n    var nextTurn = turn === \"O\" ? \"X\" : \"O\";\n\n    var _iterator = _createForOfIteratorHelper(shuffle(range(grid.length))),\n        _step;\n\n    try {\n      for (_iterator.s(); !(_step = _iterator.n()).done;) {\n        var pos = _step.value;\n\n        if (grid[pos] === null) {\n          grid[pos] = turn;\n\n          var _Strategy$minimax = Strategy.minimax(grid, nextTurn),\n              _Strategy$minimax2 = _slicedToArray(_Strategy$minimax, 2),\n              oppoScore = _Strategy$minimax2[1];\n\n          if (-oppoScore > score) {\n            score = -oppoScore;\n            posChoice = pos;\n          }\n\n          grid[pos] = null;\n          if (score === 1) break;\n        }\n      }\n    } catch (err) {\n      _iterator.e(err);\n    } finally {\n      _iterator.f();\n    }\n\n    return [posChoice, score];\n  }\n};\nvar WIN_CONDITIONS = [[0, 1, 2], [3, 4, 5], [6, 7, 8], [0, 3, 6], [1, 4, 7], [2, 5, 8], [0, 4, 8], [2, 4, 6]];\n\nvar gameCheck = function gameCheck(grid) {\n  if (grid.filter(function (block) {\n    return block === null;\n  }).length === 0) {\n    return [GameStatus.End, null];\n  }\n\n  var _iterator2 = _createForOfIteratorHelper(WIN_CONDITIONS),\n      _step2;\n\n  try {\n    for (_iterator2.s(); !(_step2 = _iterator2.n()).done;) {\n      var cond = _step2.value;\n\n      if (cond.filter(function (idx) {\n        return grid[idx] === \"O\";\n      }).length === 3) {\n        return [GameStatus.End, \"O\"];\n      }\n\n      if (cond.filter(function (idx) {\n        return grid[idx] === \"X\";\n      }).length === 3) {\n        return [GameStatus.End, \"X\"];\n      }\n    }\n  } catch (err) {\n    _iterator2.e(err);\n  } finally {\n    _iterator2.f();\n  }\n\n  return [GameStatus.Playing, null];\n};\n\nfunction TicTacToe(_ref2) {\n  _s();\n\n  var difficulty = _ref2.difficulty;\n\n  var _useState = useState(initState),\n      _useState2 = _slicedToArray(_useState, 2),\n      state = _useState2[0],\n      setState = _useState2[1];\n\n  var grid = state.grid,\n      turn = state.turn,\n      gameStatus = state.gameStatus,\n      winner = state.winner,\n      you = state.you;\n  useEffect(function () {\n    if (turn !== you && gameStatus === GameStatus.Playing) setTimeout(aiMove, 500);\n  }, [state]);\n\n  var start = function start(choice) {\n    setState(function (preState) {\n      return _objectSpread(_objectSpread({}, preState), {}, {\n        grid: Array(9).fill(null),\n        turn: \"O\",\n        gameStatus: GameStatus.Playing,\n        winner: null,\n        you: choice\n      });\n    });\n  };\n\n  var move = function move(pos) {\n    if (grid[pos] === null) {\n      var newGrid = _toConsumableArray(grid);\n\n      newGrid[pos] = turn;\n\n      var _gameCheck3 = gameCheck(newGrid),\n          _gameCheck4 = _slicedToArray(_gameCheck3, 2),\n          _gameStatus = _gameCheck4[0],\n          _winner = _gameCheck4[1];\n\n      var nextTurn = turn === \"O\" ? \"X\" : \"O\";\n\n      if (_gameStatus !== GameStatus.Playing) {\n        nextTurn = null;\n      }\n\n      setState(function (preState) {\n        return _objectSpread(_objectSpread({}, preState), {}, {\n          grid: newGrid,\n          gameStatus: _gameStatus,\n          turn: nextTurn,\n          winner: _winner\n        });\n      });\n    }\n  };\n\n  var youMove = function youMove(pos) {\n    if (turn === you) move(pos);\n  };\n\n  var aiMove = function aiMove() {\n    var pos;\n\n    if (difficulty === \"impossible\") {\n      var _Strategy$minimax3 = Strategy.minimax(grid, turn);\n\n      var _Strategy$minimax4 = _slicedToArray(_Strategy$minimax3, 1);\n\n      pos = _Strategy$minimax4[0];\n    } else {\n      pos = Strategy.random(state.grid);\n    }\n\n    move(pos);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"game\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"box\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"row\",\n        children: [/*#__PURE__*/_jsxDEV(Block, {\n          pos: 0,\n          grid: grid,\n          onClick: youMove\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 160,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Block, {\n          pos: 1,\n          grid: grid,\n          onClick: youMove\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 161,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Block, {\n          pos: 2,\n          grid: grid,\n          onClick: youMove\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 162,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 159,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"row\",\n        children: [/*#__PURE__*/_jsxDEV(Block, {\n          pos: 3,\n          grid: grid,\n          onClick: youMove\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 165,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Block, {\n          pos: 4,\n          grid: grid,\n          onClick: youMove\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 166,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Block, {\n          pos: 5,\n          grid: grid,\n          onClick: youMove\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 167,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 164,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"row\",\n        children: [/*#__PURE__*/_jsxDEV(Block, {\n          pos: 6,\n          grid: grid,\n          onClick: youMove\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 170,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Block, {\n          pos: 7,\n          grid: grid,\n          onClick: youMove\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 171,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Block, {\n          pos: 8,\n          grid: grid,\n          onClick: youMove\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 172,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 169,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 158,\n      columnNumber: 7\n    }, this), gameStatus !== GameStatus.Playing && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"overlay\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 175,\n      columnNumber: 45\n    }, this), gameStatus === GameStatus.Init && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"panel\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: \"Tic Tac Toe\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 178,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"actions\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"start-btn\",\n          onClick: function onClick() {\n            return start(\"O\");\n          },\n          children: \"O\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 180,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"start-btn\",\n          onClick: function onClick() {\n            return start(\"X\");\n          },\n          children: \"X\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 183,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 179,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 177,\n      columnNumber: 9\n    }, this), gameStatus === GameStatus.End && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"panel\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: winner ? \"Winner: \".concat(winner) : \"Draw\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 191,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"actions\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"start-btn\",\n          onClick: function onClick() {\n            return start(\"O\");\n          },\n          children: \"O\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 193,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"start-btn\",\n          onClick: function onClick() {\n            return start(\"X\");\n          },\n          children: \"X\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 196,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 192,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 190,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 157,\n    columnNumber: 5\n  }, this);\n}\n\n_s(TicTacToe, \"9SIPcrOShGnkkJPPEmZJamKKPEo=\");\n\n_c2 = TicTacToe;\nexport default TicTacToe;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Block\");\n$RefreshReg$(_c2, \"TicTacToe\");","map":{"version":3,"sources":["/home/amit/Documents/amit per/amitgame/src/tiktak/tictactoe-v3.js"],"names":["React","useState","useEffect","shuffle","range","Block","pos","grid","onClick","GameStatus","Init","Playing","End","initState","Array","fill","turn","gameStatus","winner","you","Strategy","random","avail","forEach","block","i","push","length","Math","floor","minimax","gameCheck","score","Number","MIN_SAFE_INTEGER","posChoice","nextTurn","oppoScore","WIN_CONDITIONS","filter","cond","idx","TicTacToe","difficulty","state","setState","setTimeout","aiMove","start","choice","preState","move","newGrid","youMove"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport shuffle from \"lodash/shuffle\";\nimport range from \"lodash/range\";\nimport \"./tictactoe.css\";\n\nfunction Block({ pos, grid, onClick }) {\n  return (\n    <div className=\"block\" onClick={() => onClick(pos)}>\n      {grid[pos]}\n    </div>\n  );\n}\n\nconst GameStatus = {\n  Init: \"Init\",\n  Playing: \"Playing\",\n  End: \"End\"\n};\n\nconst initState = {\n  grid: Array(9).fill(null),\n  turn: null,\n  gameStatus: GameStatus.Init,\n  winner: null,\n  you: null\n};\n\nconst Strategy = {\n  random: grid => {\n    const avail = [];\n    grid.forEach((block, i) => {\n      if (block === null) avail.push(i);\n    });\n\n    if (avail.length === 0) return null;\n    return avail[Math.floor(Math.random() * avail.length)];\n  },\n\n  minimax: (grid, turn) => {\n    const [gameStatus, winner] = gameCheck(grid);\n    if (gameStatus === GameStatus.End) {\n      if (winner === null) return [null, 0];\n      return [null, -1];\n    }\n\n    let score = Number.MIN_SAFE_INTEGER;\n    let posChoice = null;\n    const nextTurn = turn === \"O\" ? \"X\" : \"O\";\n\n    for (let pos of shuffle(range(grid.length))) {\n      if (grid[pos] === null) {\n        grid[pos] = turn;\n\n        const [, oppoScore] = Strategy.minimax(grid, nextTurn);\n        if (-oppoScore > score) {\n          score = -oppoScore;\n          posChoice = pos;\n        }\n\n        grid[pos] = null;\n\n        if (score === 1) break;\n      }\n    }\n    return [posChoice, score];\n  }\n};\n\nconst WIN_CONDITIONS = [\n  [0, 1, 2],\n  [3, 4, 5],\n  [6, 7, 8],\n  [0, 3, 6],\n  [1, 4, 7],\n  [2, 5, 8],\n  [0, 4, 8],\n  [2, 4, 6]\n];\n\nconst gameCheck = grid => {\n  if (grid.filter(block => block === null).length === 0) {\n    return [GameStatus.End, null];\n  }\n\n  for (const cond of WIN_CONDITIONS) {\n    if (cond.filter(idx => grid[idx] === \"O\").length === 3) {\n      return [GameStatus.End, \"O\"];\n    }\n\n    if (cond.filter(idx => grid[idx] === \"X\").length === 3) {\n      return [GameStatus.End, \"X\"];\n    }\n  }\n\n  return [GameStatus.Playing, null];\n};\n\nfunction TicTacToe({ difficulty }) {\n  const [state, setState] = useState(initState);\n  const { grid, turn, gameStatus, winner, you } = state;\n\n  useEffect(() => {\n    if (turn !== you && gameStatus === GameStatus.Playing)\n      setTimeout(aiMove, 500);\n  }, [state]);\n\n  const start = choice => {\n    setState(preState => ({\n      ...preState,\n      grid: Array(9).fill(null),\n      turn: \"O\",\n      gameStatus: GameStatus.Playing,\n      winner: null,\n      you: choice\n    }));\n  };\n\n  const move = pos => {\n    if (grid[pos] === null) {\n      const newGrid = [...grid];\n      newGrid[pos] = turn;\n\n      const [gameStatus, winner] = gameCheck(newGrid);\n\n      let nextTurn = turn === \"O\" ? \"X\" : \"O\";\n      if (gameStatus !== GameStatus.Playing) {\n        nextTurn = null;\n      }\n\n      setState(preState => ({\n        ...preState,\n        grid: newGrid,\n        gameStatus,\n        turn: nextTurn,\n        winner\n      }));\n    }\n  };\n\n  const youMove = pos => {\n    if (turn === you) move(pos);\n  };\n\n  const aiMove = () => {\n    let pos;\n\n    if (difficulty === \"impossible\") {\n      [pos] = Strategy.minimax(grid, turn);\n    } else {\n      pos = Strategy.random(state.grid);\n    }\n\n    move(pos);\n  };\n\n  return (\n    <div className=\"game\">\n      <div className=\"box\">\n        <div className=\"row\">\n          <Block pos={0} grid={grid} onClick={youMove} />\n          <Block pos={1} grid={grid} onClick={youMove} />\n          <Block pos={2} grid={grid} onClick={youMove} />\n        </div>\n        <div className=\"row\">\n          <Block pos={3} grid={grid} onClick={youMove} />\n          <Block pos={4} grid={grid} onClick={youMove} />\n          <Block pos={5} grid={grid} onClick={youMove} />\n        </div>\n        <div className=\"row\">\n          <Block pos={6} grid={grid} onClick={youMove} />\n          <Block pos={7} grid={grid} onClick={youMove} />\n          <Block pos={8} grid={grid} onClick={youMove} />\n        </div>\n      </div>\n      {gameStatus !== GameStatus.Playing && <div className=\"overlay\" />}\n      {gameStatus === GameStatus.Init && (\n        <div className=\"panel\">\n          <div>Tic Tac Toe</div>\n          <div className=\"actions\">\n            <div className=\"start-btn\" onClick={() => start(\"O\")}>\n              O\n            </div>\n            <div className=\"start-btn\" onClick={() => start(\"X\")}>\n              X\n            </div>\n          </div>\n        </div>\n      )}\n      {gameStatus === GameStatus.End && (\n        <div className=\"panel\">\n          <div>{winner ? `Winner: ${winner}` : \"Draw\"}</div>\n          <div className=\"actions\">\n            <div className=\"start-btn\" onClick={() => start(\"O\")}>\n              O\n            </div>\n            <div className=\"start-btn\" onClick={() => start(\"X\")}>\n              X\n            </div>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n}\n\nexport default TicTacToe;\n"]},"metadata":{},"sourceType":"module"}