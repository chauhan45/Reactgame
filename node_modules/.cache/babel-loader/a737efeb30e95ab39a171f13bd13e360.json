{"ast":null,"code":"import _toConsumableArray from\"/home/amit/Documents/amit per/amitgame/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js\";import _objectSpread from\"/home/amit/Documents/amit per/amitgame/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";import _createForOfIteratorHelper from\"/home/amit/Documents/amit per/amitgame/node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper.js\";import _slicedToArray from\"/home/amit/Documents/amit per/amitgame/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import React,{useState,useEffect}from\"react\";import shuffle from\"lodash/shuffle\";import range from\"lodash/range\";import\"./tictactoe.css\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";function Block(_ref){var pos=_ref.pos,grid=_ref.grid,_onClick=_ref.onClick;return/*#__PURE__*/_jsx(\"div\",{className:\"block\",onClick:function onClick(){return _onClick(pos);},children:grid[pos]});}var GameStatus={Init:\"Init\",Playing:\"Playing\",End:\"End\"};var initState={grid:Array(9).fill(null),turn:null,gameStatus:GameStatus.Init,winner:null,you:null};var Strategy={random:function random(grid){var avail=[];grid.forEach(function(block,i){if(block===null)avail.push(i);});if(avail.length===0)return null;return avail[Math.floor(Math.random()*avail.length)];},minimax:function minimax(grid,turn){var _gameCheck=gameCheck(grid),_gameCheck2=_slicedToArray(_gameCheck,2),gameStatus=_gameCheck2[0],winner=_gameCheck2[1];if(gameStatus===GameStatus.End){if(winner===null)return[null,0];return[null,-1];}var score=Number.MIN_SAFE_INTEGER;var posChoice=null;var nextTurn=turn===\"O\"?\"X\":\"O\";var _iterator=_createForOfIteratorHelper(shuffle(range(grid.length))),_step;try{for(_iterator.s();!(_step=_iterator.n()).done;){var pos=_step.value;if(grid[pos]===null){grid[pos]=turn;var _Strategy$minimax=Strategy.minimax(grid,nextTurn),_Strategy$minimax2=_slicedToArray(_Strategy$minimax,2),oppoScore=_Strategy$minimax2[1];if(-oppoScore>score){score=-oppoScore;posChoice=pos;}grid[pos]=null;if(score===1)break;}}}catch(err){_iterator.e(err);}finally{_iterator.f();}return[posChoice,score];}};var WIN_CONDITIONS=[[0,1,2],[3,4,5],[6,7,8],[0,3,6],[1,4,7],[2,5,8],[0,4,8],[2,4,6]];var gameCheck=function gameCheck(grid){if(grid.filter(function(block){return block===null;}).length===0){return[GameStatus.End,null];}var _iterator2=_createForOfIteratorHelper(WIN_CONDITIONS),_step2;try{for(_iterator2.s();!(_step2=_iterator2.n()).done;){var cond=_step2.value;if(cond.filter(function(idx){return grid[idx]===\"O\";}).length===3){return[GameStatus.End,\"O\"];}if(cond.filter(function(idx){return grid[idx]===\"X\";}).length===3){return[GameStatus.End,\"X\"];}}}catch(err){_iterator2.e(err);}finally{_iterator2.f();}return[GameStatus.Playing,null];};function TicTacToe(_ref2){var difficulty=_ref2.difficulty;var _useState=useState(initState),_useState2=_slicedToArray(_useState,2),state=_useState2[0],setState=_useState2[1];var grid=state.grid,turn=state.turn,gameStatus=state.gameStatus,winner=state.winner,you=state.you;useEffect(function(){if(turn!==you&&gameStatus===GameStatus.Playing)setTimeout(aiMove,500);},[state]);var start=function start(choice){setState(function(preState){return _objectSpread(_objectSpread({},preState),{},{grid:Array(9).fill(null),turn:\"O\",gameStatus:GameStatus.Playing,winner:null,you:choice});});};var move=function move(pos){if(grid[pos]===null){var newGrid=_toConsumableArray(grid);newGrid[pos]=turn;var _gameCheck3=gameCheck(newGrid),_gameCheck4=_slicedToArray(_gameCheck3,2),_gameStatus=_gameCheck4[0],_winner=_gameCheck4[1];var nextTurn=turn===\"O\"?\"X\":\"O\";if(_gameStatus!==GameStatus.Playing){nextTurn=null;}setState(function(preState){return _objectSpread(_objectSpread({},preState),{},{grid:newGrid,gameStatus:_gameStatus,turn:nextTurn,winner:_winner});});}};var youMove=function youMove(pos){if(turn===you)move(pos);};var aiMove=function aiMove(){var pos;if(difficulty===\"impossible\"){var _Strategy$minimax3=Strategy.minimax(grid,turn);var _Strategy$minimax4=_slicedToArray(_Strategy$minimax3,1);pos=_Strategy$minimax4[0];}else{pos=Strategy.random(state.grid);}move(pos);};return/*#__PURE__*/_jsxs(\"div\",{className:\"game\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"box\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"row\",children:[/*#__PURE__*/_jsx(Block,{pos:0,grid:grid,onClick:youMove}),/*#__PURE__*/_jsx(Block,{pos:1,grid:grid,onClick:youMove}),/*#__PURE__*/_jsx(Block,{pos:2,grid:grid,onClick:youMove})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"row\",children:[/*#__PURE__*/_jsx(Block,{pos:3,grid:grid,onClick:youMove}),/*#__PURE__*/_jsx(Block,{pos:4,grid:grid,onClick:youMove}),/*#__PURE__*/_jsx(Block,{pos:5,grid:grid,onClick:youMove})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"row\",children:[/*#__PURE__*/_jsx(Block,{pos:6,grid:grid,onClick:youMove}),/*#__PURE__*/_jsx(Block,{pos:7,grid:grid,onClick:youMove}),/*#__PURE__*/_jsx(Block,{pos:8,grid:grid,onClick:youMove})]})]}),gameStatus!==GameStatus.Playing&&/*#__PURE__*/_jsx(\"div\",{className:\"overlay\"}),gameStatus===GameStatus.Init&&/*#__PURE__*/_jsxs(\"div\",{className:\"panel\",children:[/*#__PURE__*/_jsx(\"div\",{children:\"Tic Tac Toe\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"actions\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"start-btn\",onClick:function onClick(){return start(\"O\");},children:\"O\"}),/*#__PURE__*/_jsx(\"div\",{className:\"start-btn\",onClick:function onClick(){return start(\"X\");},children:\"X\"})]})]}),gameStatus===GameStatus.End&&/*#__PURE__*/_jsxs(\"div\",{className:\"panel\",children:[/*#__PURE__*/_jsx(\"div\",{children:winner?\"Winner: \".concat(winner):\"Draw\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"actions\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"start-btn\",onClick:function onClick(){return start(\"O\");},children:\"O\"}),/*#__PURE__*/_jsx(\"div\",{className:\"start-btn\",onClick:function onClick(){return start(\"X\");},children:\"X\"})]})]})]});}export default TicTacToe;","map":{"version":3,"sources":["/home/amit/Documents/amit per/amitgame/src/tiktak/tictactoe-v3.js"],"names":["React","useState","useEffect","shuffle","range","Block","pos","grid","onClick","GameStatus","Init","Playing","End","initState","Array","fill","turn","gameStatus","winner","you","Strategy","random","avail","forEach","block","i","push","length","Math","floor","minimax","gameCheck","score","Number","MIN_SAFE_INTEGER","posChoice","nextTurn","oppoScore","WIN_CONDITIONS","filter","cond","idx","TicTacToe","difficulty","state","setState","setTimeout","aiMove","start","choice","preState","move","newGrid","youMove"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport shuffle from \"lodash/shuffle\";\nimport range from \"lodash/range\";\nimport \"./tictactoe.css\";\n\nfunction Block({ pos, grid, onClick }) {\n  return (\n    <div className=\"block\" onClick={() => onClick(pos)}>\n      {grid[pos]}\n    </div>\n  );\n}\n\nconst GameStatus = {\n  Init: \"Init\",\n  Playing: \"Playing\",\n  End: \"End\"\n};\n\nconst initState = {\n  grid: Array(9).fill(null),\n  turn: null,\n  gameStatus: GameStatus.Init,\n  winner: null,\n  you: null\n};\n\nconst Strategy = {\n  random: grid => {\n    const avail = [];\n    grid.forEach((block, i) => {\n      if (block === null) avail.push(i);\n    });\n\n    if (avail.length === 0) return null;\n    return avail[Math.floor(Math.random() * avail.length)];\n  },\n\n  minimax: (grid, turn) => {\n    const [gameStatus, winner] = gameCheck(grid);\n    if (gameStatus === GameStatus.End) {\n      if (winner === null) return [null, 0];\n      return [null, -1];\n    }\n\n    let score = Number.MIN_SAFE_INTEGER;\n    let posChoice = null;\n    const nextTurn = turn === \"O\" ? \"X\" : \"O\";\n\n    for (let pos of shuffle(range(grid.length))) {\n      if (grid[pos] === null) {\n        grid[pos] = turn;\n\n        const [, oppoScore] = Strategy.minimax(grid, nextTurn);\n        if (-oppoScore > score) {\n          score = -oppoScore;\n          posChoice = pos;\n        }\n\n        grid[pos] = null;\n\n        if (score === 1) break;\n      }\n    }\n    return [posChoice, score];\n  }\n};\n\nconst WIN_CONDITIONS = [\n  [0, 1, 2],\n  [3, 4, 5],\n  [6, 7, 8],\n  [0, 3, 6],\n  [1, 4, 7],\n  [2, 5, 8],\n  [0, 4, 8],\n  [2, 4, 6]\n];\n\nconst gameCheck = grid => {\n  if (grid.filter(block => block === null).length === 0) {\n    return [GameStatus.End, null];\n  }\n\n  for (const cond of WIN_CONDITIONS) {\n    if (cond.filter(idx => grid[idx] === \"O\").length === 3) {\n      return [GameStatus.End, \"O\"];\n    }\n\n    if (cond.filter(idx => grid[idx] === \"X\").length === 3) {\n      return [GameStatus.End, \"X\"];\n    }\n  }\n\n  return [GameStatus.Playing, null];\n};\n\nfunction TicTacToe({ difficulty }) {\n  const [state, setState] = useState(initState);\n  const { grid, turn, gameStatus, winner, you } = state;\n\n  useEffect(() => {\n    if (turn !== you && gameStatus === GameStatus.Playing)\n      setTimeout(aiMove, 500);\n  }, [state]);\n\n  const start = choice => {\n    setState(preState => ({\n      ...preState,\n      grid: Array(9).fill(null),\n      turn: \"O\",\n      gameStatus: GameStatus.Playing,\n      winner: null,\n      you: choice\n    }));\n  };\n\n  const move = pos => {\n    if (grid[pos] === null) {\n      const newGrid = [...grid];\n      newGrid[pos] = turn;\n\n      const [gameStatus, winner] = gameCheck(newGrid);\n\n      let nextTurn = turn === \"O\" ? \"X\" : \"O\";\n      if (gameStatus !== GameStatus.Playing) {\n        nextTurn = null;\n      }\n\n      setState(preState => ({\n        ...preState,\n        grid: newGrid,\n        gameStatus,\n        turn: nextTurn,\n        winner\n      }));\n    }\n  };\n\n  const youMove = pos => {\n    if (turn === you) move(pos);\n  };\n\n  const aiMove = () => {\n    let pos;\n\n    if (difficulty === \"impossible\") {\n      [pos] = Strategy.minimax(grid, turn);\n    } else {\n      pos = Strategy.random(state.grid);\n    }\n\n    move(pos);\n  };\n\n  return (\n    <div className=\"game\">\n      <div className=\"box\">\n        <div className=\"row\">\n          <Block pos={0} grid={grid} onClick={youMove} />\n          <Block pos={1} grid={grid} onClick={youMove} />\n          <Block pos={2} grid={grid} onClick={youMove} />\n        </div>\n        <div className=\"row\">\n          <Block pos={3} grid={grid} onClick={youMove} />\n          <Block pos={4} grid={grid} onClick={youMove} />\n          <Block pos={5} grid={grid} onClick={youMove} />\n        </div>\n        <div className=\"row\">\n          <Block pos={6} grid={grid} onClick={youMove} />\n          <Block pos={7} grid={grid} onClick={youMove} />\n          <Block pos={8} grid={grid} onClick={youMove} />\n        </div>\n      </div>\n      {gameStatus !== GameStatus.Playing && <div className=\"overlay\" />}\n      {gameStatus === GameStatus.Init && (\n        <div className=\"panel\">\n          <div>Tic Tac Toe</div>\n          <div className=\"actions\">\n            <div className=\"start-btn\" onClick={() => start(\"O\")}>\n              O\n            </div>\n            <div className=\"start-btn\" onClick={() => start(\"X\")}>\n              X\n            </div>\n          </div>\n        </div>\n      )}\n      {gameStatus === GameStatus.End && (\n        <div className=\"panel\">\n          <div>{winner ? `Winner: ${winner}` : \"Draw\"}</div>\n          <div className=\"actions\">\n            <div className=\"start-btn\" onClick={() => start(\"O\")}>\n              O\n            </div>\n            <div className=\"start-btn\" onClick={() => start(\"X\")}>\n              X\n            </div>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n}\n\nexport default TicTacToe;\n"]},"metadata":{},"sourceType":"module"}