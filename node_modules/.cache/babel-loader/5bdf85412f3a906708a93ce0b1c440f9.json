{"ast":null,"code":"import _classCallCheck from\"/home/amit/Documents/amit per/amitgame/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";import _createClass from\"/home/amit/Documents/amit per/amitgame/node_modules/@babel/runtime/helpers/esm/createClass.js\";import _inherits from\"/home/amit/Documents/amit per/amitgame/node_modules/@babel/runtime/helpers/esm/inherits.js\";import _createSuper from\"/home/amit/Documents/amit per/amitgame/node_modules/@babel/runtime/helpers/esm/createSuper.js\";import React,{Component}from\"react\";import GameBoard from\"./components/GameBoard\";import NewGame from\"./components/NewGame\";import PlayAgain from\"./components/PlayAgain\";import Navbar from\"./Screen/Navbar\";import\"./style.css\";import Titakapp from\"../src/Tiktakapp\";import{Main}from\"./Screen/Main\";import{Auth0Provider}from\"@auth0/auth0-react\";import{BrowserRouter as Router,Route,Switch,Link}from\"react-router-dom\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var App=/*#__PURE__*/function(_Component){_inherits(App,_Component);var _super=_createSuper(App);function App(){var _this;_classCallCheck(this,App);for(var _len=arguments.length,args=new Array(_len),_key=0;_key<_len;_key++){args[_key]=arguments[_key];}_this=_super.call.apply(_super,[this].concat(args));_this.state=App.initState();_this.countClicks=function(){_this.setState(function(prevState){return{clicks:prevState.clicks+1};});};_this.generateDeck=function(){var amount=10;var cards=[];for(var i=1;i<amount+1;i++){var id=createId();var id2=createId();var rand=Math.floor(Math.random()*300)+1;var card1={id:id,matchesId:id2,url:\"https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/pokemon/\".concat(rand,\".png\"),flipped:false,found:false};var card2={id:id2,matchesId:id,url:\"https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/pokemon/\".concat(rand,\".png\"),flipped:false,found:false};cards.push(card1);cards.push(card2);}_this.shuffleCards(cards);_this.setState({cards:cards});};_this.shuffleCards=function(a){for(var i=a.length-1;i>0;i--){var j=Math.floor(Math.random()*(i+1));var _ref=[a[j],a[i]];a[i]=_ref[0];a[j]=_ref[1];}return a;};_this.resetGame=function(){_this.setState(App.initState(),function(){_this.initGame();});};_this.hasWon=function(){_this.setState({won:true});};_this.initGame=function(){_this.generateDeck();_this.setState({newGame:true});};return _this;}_createClass(App,[{key:\"render\",value:function render(){var _this$state=this.state,cards=_this$state.cards,newGame=_this$state.newGame,won=_this$state.won,clicks=_this$state.clicks;return/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(Navbar,{}),/*#__PURE__*/_jsxs(\"div\",{className:\"board-container\",children:[newGame?/*#__PURE__*/_jsx(GameBoard,{cards:cards,won:this.hasWon,click:this.countClicks}):null,newGame&&/*#__PURE__*/_jsxs(\"p\",{className:\"message center\",children:[\"Total flips: \",clicks]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"menu\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"message\",children:won&&/*#__PURE__*/_jsx(\"h2\",{children:\"You win!\"})}),/*#__PURE__*/_jsx(NewGame,{play:this.initGame}),won&&/*#__PURE__*/_jsx(PlayAgain,{again:this.resetGame})]}),/*#__PURE__*/_jsx(Router,{children:/*#__PURE__*/_jsx(\"div\",{className:\"container\",children:/*#__PURE__*/_jsxs(Switch,{children:[/*#__PURE__*/_jsx(Route,{path:\"Titakapp\",component:Titakapp}),/*#__PURE__*/_jsx(Route,{path:\"Main\",component:Main})]})})})]});}}]);return App;}(Component);App.initState=function(){return{newGame:false,won:false,cards:[],clicks:0};};export default App;var createId=function createId(){return Math.random().toString(36).substring(2,15)+Math.random().toString(36).substring(2,15);};","map":{"version":3,"sources":["/home/amit/Documents/amit per/amitgame/src/App.js"],"names":["React","Component","GameBoard","NewGame","PlayAgain","Navbar","Titakapp","Main","Auth0Provider","BrowserRouter","Router","Route","Switch","Link","App","state","initState","countClicks","setState","prevState","clicks","generateDeck","amount","cards","i","id","createId","id2","rand","Math","floor","random","card1","matchesId","url","flipped","found","card2","push","shuffleCards","a","length","j","resetGame","initGame","hasWon","won","newGame","toString","substring"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport GameBoard from \"./components/GameBoard\";\nimport NewGame from \"./components/NewGame\";\nimport PlayAgain from \"./components/PlayAgain\";\nimport Navbar from \"./Screen/Navbar\";\nimport \"./style.css\";\nimport Titakapp from \"../src/Tiktakapp\";\nimport { Main } from \"./Screen/Main\";\nimport { Auth0Provider } from \"@auth0/auth0-react\";\nimport {\n  BrowserRouter as Router,\n  Route,\n  Switch,\n  Link\n} from \"react-router-dom\";\nclass App extends Component {\n  static initState = () => {\n    return {\n      newGame: false,\n      won: false,\n      cards: [],\n      clicks: 0,\n    };\n  };\n\n  state = App.initState();\n\n  countClicks = () => {\n    this.setState((prevState) => ({\n      clicks: prevState.clicks + 1,\n    }));\n  };\n\n  generateDeck = () => {\n    let amount = 10;\n    let cards = [];\n    for (let i = 1; i < amount + 1; i++) {\n      let id = createId();\n      let id2 = createId();\n      let rand = Math.floor(Math.random() * 300) + 1;\n      const card1 = {\n        id: id,\n        matchesId: id2,\n        url: `https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/pokemon/${rand}.png`,\n        flipped: false,\n        found: false,\n      };\n      const card2 = {\n        id: id2,\n        matchesId: id,\n        url: `https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/pokemon/${rand}.png`,\n        flipped: false,\n        found: false,\n      };\n      cards.push(card1);\n      cards.push(card2);\n    }\n    this.shuffleCards(cards);\n    this.setState({\n      cards: cards,\n    });\n  };\n\n  shuffleCards = (a) => {\n    for (let i = a.length - 1; i > 0; i--) {\n      const j = Math.floor(Math.random() * (i + 1));\n      [a[i], a[j]] = [a[j], a[i]];\n    }\n    return a;\n  };\n\n  resetGame = () => {\n    this.setState(App.initState(), () => {\n      this.initGame();\n    });\n  };\n\n  hasWon = () => {\n    this.setState({\n      won: true,\n    });\n  };\n\n  initGame = () => {\n    this.generateDeck();\n    this.setState({\n      newGame: true,\n    });\n  };\n\n  render() {\n    const { cards, newGame, won, clicks } = this.state;\n    return (\n      <div>\n    \n        <Navbar />\n        <div className=\"board-container\">\n          {newGame ? (\n            <GameBoard\n              cards={cards}\n              won={this.hasWon}\n              click={this.countClicks}\n            />\n          ) : null}\n          {newGame && <p className=\"message center\">Total flips: {clicks}</p>}\n        </div>\n\n        <div className=\"menu\">\n          <div className=\"message\">{won && <h2>You win!</h2>}</div>\n          <NewGame play={this.initGame} />\n          {won && <PlayAgain again={this.resetGame} />}\n        </div>\n\n        <Router>\n          <div className=\"container\">\n            <Switch>\n              <Route path=\"Titakapp\" component={Titakapp} />\n              <Route path=\"Main\" component={Main} />\n            </Switch>\n          </div>\n        </Router>\n       \n      </div>\n    );\n  }\n}\nexport default App;\n\nconst createId = () => {\n  return (\n    Math.random().toString(36).substring(2, 15) +\n    Math.random().toString(36).substring(2, 15)\n  );\n};\n"]},"metadata":{},"sourceType":"module"}